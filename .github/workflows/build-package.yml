name: Build MSYS2 package

on:
  workflow_call:
    inputs:
      if:
        description: "Condition allowing to skip all steps of the workflow job"
        type: boolean
        default: true
      package_name:
        description: "Package name to build"
        type: string
      packages_repository:
        description: "MSYS2 packages repository to build from"
        type: string
        default: "Windows-on-ARM-Experiments/MSYS2-packages"
      packages_branch:
        description: "MSYS2 packages branch to build from"
        type: string
        default: "woarm64"
      runner_arch:
        description: "Architecture to build on"
        type: string
        default: "x86_64"
      build_with_native:
        description: "Build with native MinGW toolchain"
        type: boolean
        default: false
      needs:
        description: "Parent workflow job dependencies"
        type: string
      dependencies:
        description: "Install additional dependencies"
        type: string
        default: ""
      check:
        description: "Enable check step after the package is built"
        type: boolean
        default: false
      check_module:
        description: "Module to test"
        type: string
        default: ""
      check_filter:
        description: "Test filter"
        type: string
        default: ""

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  FLAVOR: ${{ (inputs.runner_arch == 'aarch64') && (inputs.build_with_native && 'NATIVE_WITH_NATIVE' || 'NATIVE_WITH_CROSS') || 'CROSS' }}
  CLEAN_BUILD: 1
  NO_CHECK: ${{ inputs.check && '0' || '1' }}
  NO_ARCHIVE: ${{ inputs.check && '1' || '0' }}
  MODULE: ${{ inputs.check_module }}
  FILTER: ${{ inputs.check_filter }}

jobs:
  build:
    name: ${{ inputs.if && 'Build' || 'Skip'}} ${{ inputs.package_name }}
    timeout-minutes: 720
    runs-on: >-
      ${{ fromJson(inputs.runner_arch == 'aarch64'
        && '["Windows", "ARM64", "MSYS2"]'
        || '["windows-latest"]') }}

    defaults:
     run:
       shell: msys2 {0}

    steps:
      - name: Kill hanging processes
        if: inputs.if && inputs.runner_arch == 'aarch64'
        shell: powershell
        run: |
          taskkill /F /FI 'MODULES eq msys-2.0.dll'
          Set-Location "${{ github.workspace }}"
          Remove-Item -Recurse -Force -ErrorAction SilentlyContinue -Path packages
          exit 0

      - uses: Windows-on-ARM-Experiments/setup-msys2@main
        if: inputs.if
        timeout-minutes: 10
        with:
          msystem: >-
            ${{ contains(inputs.packages_repository, 'MINGW')
              && ((inputs.runner_arch == 'aarch64') && 'MINGWARM64' || 'MINGW64')
              || 'MSYS' }}
          path-type: minimal
          update: true
          cache: true

      - name: Checkout repository
        if: inputs.if
        uses: actions/checkout@v4

      - name: Checkout ${{ inputs.packages_repository }} repository
        if: inputs.if
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.packages_repository }}
          ref: ${{ ((inputs.runner_arch == 'aarch64') && !inputs.build_with_native) && format('{0}-cross', inputs.packages_branch) || inputs.packages_branch }}
          sparse-checkout: ${{ inputs.package_name }}
          path: ${{ github.workspace }}/packages

      - name: Setup packages repository
        if: inputs.if && inputs.runner_arch == 'aarch64'
        run: |
          `cygpath "${{ github.workspace }}"`/.github/scripts/setup-repository.sh

      - name: Install dependencies
        if: inputs.if
        run: >-
          `cygpath "${{ github.workspace }}"`/.github/scripts/install-dependencies.sh \
            "git mingw-w64-x86_64-github-cli mingw-w64-x86_64-jq ${{ inputs.dependencies }}"

      - name: Download artifacts
        if: inputs.if && inputs.needs
        run: |
          `cygpath "${{ github.workspace }}"`/.github/scripts/download-artifacts.sh \
            ${{ github.run_id }} \
            '${{ inputs.needs }}'

      - name: Install artifacts
        if: inputs.if && inputs.needs
        run: |
          `cygpath "${{ github.workspace }}"`/.github/scripts/install-artifacts.sh

      - name: Copy missing headers for mingw-w64-cross-mingwarm64-crt
        if: inputs.if && inputs.package_name == 'mingw-w64-cross-mingwarm64-crt'
        run: |
          `cygpath "${{ github.workspace }}"`/.github/scripts/pthread-headers-hack-before.sh

      - name: Patch Dejagnu
        if: inputs.if && inputs.check
        run: |
          `cygpath "${{ github.workspace }}"`/.github/scripts/patch-dejagnu.sh

      - name: Setup MINGWARM64 environment
        if: inputs.if && inputs.runner_arch == 'aarch64'
        run: |
          `cygpath "${{ github.workspace }}"`/.github/scripts/setup-mingwarm64.sh

      - name: Enable Ccache
        if: inputs.if
        id: enable-ccache
        run: |
          `cygpath "${{ github.workspace }}"`/.github/scripts/enable-ccache.sh

      - name: Restore Ccache
        if: inputs.if
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/ccache
          key: ${{ inputs.package_name }}-ccache-${{ steps.enable-ccache.outputs.timestamp }}
          restore-keys: ${{ inputs.package_name }}-

      - name: Build ${{ inputs.check && 'and test' || '' }} ${{ inputs.package_name }}
        if: inputs.if
        timeout-minutes: 720
        working-directory: ${{ github.workspace }}/packages/${{ inputs.package_name }}
        run: |
          `cygpath "${{ github.workspace }}"`/.github/scripts/build-package.sh \
            ${{ inputs.packages_repository }}

      - name: Save Ccache
        if: inputs.if && always()
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/ccache
          key: ${{ inputs.package_name }}-ccache-${{ steps.enable-ccache.outputs.timestamp }}

      - name: Upload ${{ inputs.package_name }}
        if: inputs.if && !inputs.check
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.package_name }}
          retention-days: 3
          path: ${{ github.workspace }}/packages/${{ inputs.package_name }}/*.pkg.tar.zst

      - name: Upload ${{ inputs.package_name }} test results
        if: inputs.if && inputs.check
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.package_name }}-test-results
          retention-days: 14
          path: ${{ github.workspace }}/packages/${{ inputs.package_name }}/src/test-results

      - name: Upload build folder
        if: inputs.if && failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.package_name }}-build
          retention-days: 1
          path: ${{ github.workspace }}/packages/${{ inputs.package_name }}/src
